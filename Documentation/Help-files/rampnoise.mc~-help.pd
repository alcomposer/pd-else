#N canvas 401 38 559 548 10;
#X obj 4 329 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 397 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 487 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 95 407 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 4 517 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#N canvas 207 34 366 264 (subpatch) 0;
#X obj 51 101 tgl 42 0 \$0-tgl-s \$0-tgl-r empty 1 8 1 9 #dcdcdc #7c7c7c #fcfcfc 0 1;
#X obj 215 68 route dsp;
#X obj 215 37 receive pd;
#N canvas 977 77 379 291 set_color 0;
#X obj 47 30 inlet;
#X obj 147 200 s \$0-cnv;
#X obj 47 83 select 0 1;
#X obj 47 220 s \$0-tgl-r;
#N canvas 0 22 712 637 off 0;
#X obj 490 220 * -1;
#X obj 424 300 +;
#X obj 409 325 +;
#X obj 347 219 * -65536;
#X obj 424 220 * -256;
#X obj 409 356 - 1;
#X obj 390 189 unpack f f f;
#X obj 225 295 +;
#X obj 210 320 +;
#X obj 148 214 * -65536;
#X obj 225 215 * -256;
#X obj 291 215 * -1;
#X obj 210 351 - 1;
#X obj 191 184 unpack f f f;
#X obj 379 423 pack;
#X msg 395 152 124 124 124;
#X msg 203 154 220 220 220;
#X obj 238 121 t b b;
#X obj 238 81 inlet;
#X obj 378 485 outlet;
#X connect 0 0 1 1;
#X connect 1 0 2 1;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 1 0;
#X connect 5 0 14 1;
#X connect 6 0 3 0;
#X connect 6 1 4 0;
#X connect 6 2 0 0;
#X connect 7 0 8 1;
#X connect 8 0 12 0;
#X connect 9 0 8 0;
#X connect 10 0 7 0;
#X connect 11 0 7 1;
#X connect 12 0 14 0;
#X connect 13 0 9 0;
#X connect 13 1 10 0;
#X connect 13 2 11 0;
#X connect 14 0 19 0;
#X connect 15 0 6 0;
#X connect 16 0 13 0;
#X connect 17 0 16 0;
#X connect 17 1 15 0;
#X connect 18 0 17 0;
#X restore 47 113 pd off;
#X msg 47 180 color \$1 \$2 0;
#X msg 147 131 -4.86997e+06 -1.34937e+07;
#X msg 147 171 color \$1 0 \$2;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 6 0;
#X connect 4 0 5 0;
#X connect 4 0 7 0;
#X connect 5 0 3 0;
#X connect 6 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 1 0;
#X restore 215 165 pd set_color;
#X obj 135 122 r \$0-tgl-s;
#N canvas 121 482 450 300 (subpatch) 0;
#X obj 101 101 cnv 25 40 25 empty \$0-cnv DSP 3 13 0 20 #dcdcdc #7c7c7c 0;
#X coords 0 -1 1 1 42 27 1 100 100;
#X restore 51 144 pd;
#X obj 226 139 s \$0-tgl-r;
#X msg 226 115 set \$1;
#X msg 135 177 \; pd dsp \$1;
#N canvas 256 32 278 194 load_check 0;
#X obj 136 53 sig~ 1;
#X obj 74 24 loadbang;
#X obj 136 86 snapshot~;
#X obj 91 52 del 5;
#X obj 136 151 outlet;
#X obj 74 103 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 74 126 switch~;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 1 0 5 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 3 0 5 0;
#X connect 5 0 6 0;
#X restore 51 72 pd load_check;
#X connect 1 0 3 0;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 4 0 8 0;
#X connect 4 0 3 0;
#X connect 7 0 6 0;
#X connect 9 0 0 0;
#X coords 0 -1 1 1 44 72 2 50 100;
#X restore 492 71 pd;
#X obj 95 338 cnv 17 3 52 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 143 408 signals;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 23 40 cnv 4 4 4 empty empty Multi-channel\ rampnoise\ bank 0 28 2 18 #e0e0e0 #000000 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 3 3 cnv 15 301 42 empty empty rampnoise.mc~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 2 3 graph;
#X text 143 339 signals;
#X text 201 339 - frequency values;
#X obj 213 260 else/out.mc~;
#X obj 213 191 else/sigs~ 400 800;
#X floatatom 213 159 5 0 0 0 - - - 12;
#X floatatom 318 159 5 0 0 0 - - - 12;
#X text 335 191 <- frequencies;
#X text 119 357 sum <float>;
#X obj 4 436 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X msg 149 190 sum \$1;
#X obj 149 163 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X text 59 87 [rampnoise.mc~] takes multichannel signals to set frequencies of different rampnoise generators. The output is also a multichannel signal by default \, but you can “sum” them into a single channel with the “sum” flag or message., f 67;
#X text 146 446 -sum: sums the ramp noises into a single channel;
#X text 201 357 - non zero sums the ramp noises into a single channel;
#X text 201 408 - multichannel signal from ramp noise bank;
#X text 47 261 see also:;
#X obj 47 288 else/rampnoise~;
#X obj 213 225 else/rampnoise.mc~;
#X text 113 374 seed <float>;
#X text 201 375 - a float sets seed \, no float sets a unique internal;
#N canvas 573 164 546 390 seed 0;
#X text 173 144 Pseudo random number generators aren't true random number generators. Instead \, an algorithm is used to provide a sequence of numbers that seems random. The same sequence can be reproduced if you set a "seed" value \, which can be any integer number., f 52;
#X text 173 296 You can set a seed with the '-seed' flag. If you don't supply it \, each object gets its own seed internal seed. If you send a 'seed' message without float \, the object also gets a unique seed value., f 52;
#X msg 123 29 seed 319;
#X msg 80 29 seed;
#X obj 373 32 else/setdsp~;
#X obj 80 130 else/s2f~;
#X obj 80 151 unpack;
#X obj 80 178 vsl 16 136 -1 1 0 0 empty empty empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 113 178 vsl 16 136 -1 1 0 0 empty empty empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X text 173 209 Seeds are kept locally \, which means that if two [rampnoise.mc~] objects are seeded the same they will have the same output. Conversely \, you can seed the same [rampnoise.mc~] object twice with the same seed to repeat the output. The seed value goes to the first generator in the bank and the subsequent ones get seed values incremented by 1!, f 52;
#X obj 80 81 else/rampnoise.mc~ -seed 319 0.5 0.7;
#X connect 2 0 10 0;
#X connect 3 0 10 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 6 1 8 0;
#X connect 10 0 5 0;
#X restore 476 288 pd seed;
#X text 146 465 -seed <float>: set seed value;
#X text 168 497 1) list - list of frequencies;
#N canvas 576 126 499 328 basic 0;
#X obj 115 142 else/insert set;
#X listbox 115 108 20 0 0 0 - - - 0;
#X msg 115 44 340 580 720 950;
#X msg 132 79 440 880 1320;
#X text 266 67 Instead of multichannel signal inputs you can also send it lists of frequencies (via the 'set' message) or set them via arguments., f 30;
#X obj 115 167 else/display;
#X obj 115 201 else/rampnoise.mc~ -sum 440 880 1320;
#X obj 115 232 else/out~;
#X connect 0 0 5 0;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 3 0 1 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X restore 476 263 pd basic;
#X text 35 207 THIS OBJECT IS EXPERIMENTAL AND MIGHT BE DELETED!!!, f 20;
#X connect 22 0 36 0;
#X connect 23 0 22 0;
#X connect 24 0 22 1;
#X connect 28 0 36 0;
#X connect 29 0 28 0;
#X connect 36 0 21 0;
