#N canvas 587 48 560 629 10;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 21 40 cnv 4 4 4 empty empty Velvet\ noise\ generator 0 28 2 18 #e0e0e0 #000000 0;
#X obj 4 3 cnv 15 301 42 empty empty velvet~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 3 3 graph;
#X obj 200 288 else/out~;
#X obj 3 350 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 3 449 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 3 540 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 95 458 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 3 603 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X text 182 458 signal -;
#X obj 95 402 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 138 423 float/signal -;
#X obj 95 422 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 138 403 float/signal -;
#X text 173 548 1) float;
#X text 239 548 - frequency in hertz (default 0);
#X text 173 565 2) float;
#X obj 3 483 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X obj 95 359 cnv 17 3 35 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 228 403 set polarity bias (0 - 1);
#X text 228 423 set regularity (0 - 1);
#X text 243 458 velvet noise signal;
#X text 239 565 - polarity bias (default 0.5), f 32;
#X text 239 582 - regularity (default 0), f 32;
#X text 173 581 3) float;
#X text 135 377 seed <float>;
#X text 216 377 - a float sets seed \, no float sets a unique internal;
#X text 130 493 -seed <float>: sets seed (default: unique internal);
#N canvas 777 151 497 399 seed 0;
#X text 75 11 Pseudo random number generators aren't true random number generators. Instead \, an algorithm is used to provide a sequence of numbers that seems random. The same sequence can be reproduced if you set a "seed" value \, which can be any integer number., f 57;
#X text 75 125 You can set a seed with the '-seed' flag. If you don't supply it \, each object gets its own seed internal seed. If you send a 'seed' message without float \, the object also gets a unique seed value., f 57;
#X text 75 74 Seeds are kept locally \, which means that if two velvet~] objects are seeded the same they will have the same output. Conversely \, you can seed the same [velvet~] object twice with the same seed to repeat the output., f 57;
#X msg 398 272 seed;
#X msg 388 243 seed 123;
#X obj 388 304 s \$0-velvet;
#X obj 48 290 else/trighold~;
#X obj 218 293 else/trighold~;
#X obj 48 334 else/numbox~ 6 12 100 #c0c0c4 #440008 10 0 0 0;
#X obj 218 334 else/numbox~ 6 12 100 #c0c0c4 #440008 10 0 0 0;
#X obj 218 226 r \$0-velvet;
#X obj 48 226 r \$0-velvet;
#X obj 218 256 else/velvet~ -seed 123 5;
#X obj 48 256 else/velvet~ -seed 123 5;
#X connect 3 0 5 0;
#X connect 4 0 5 0;
#X connect 6 0 8 0;
#X connect 7 0 9 0;
#X connect 10 0 12 0;
#X connect 11 0 13 0;
#X connect 12 0 7 0;
#X connect 13 0 6 0;
#X restore 477 296 pd seed;
#N canvas 548 154 665 473 multichannel 0;
#X obj 100 97 hsl 128 15 4.1 44100 1 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 97 126 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 181 127 density;
#X obj 97 251 else/out.mc~;
#X msg 161 171 ch 2;
#X msg 116 170 ch 1;
#X obj 377 249 else/out.mc~;
#X obj 97 217 else/velvet~ -ch 2 50;
#X obj 377 211 else/velvet~;
#X text 29 25 The -ch flag or message sets the number of output channels. This is only meaningful if you have a single channel input or a float input., f 42;
#X text 316 28 If you have a multichannel connection in the frequency input \, [velvet~] generates a signal with the same number of channels and the 'ch' message or flag is meaningless. The multichannel input is the frequency for each output., f 48;
#X text 109 351 For multichannel output \, if the secondary inlets have a signal with a single channel for bias and regularity \, the single value is applied to all channels. If a secondary inlet is also a multichhanel signal \, then each channel gets its sync or phase deviation value. Note \, however \, that the number of multichannels in secondary inlets need to match the same number of output channels., f 78;
#X obj 377 116 else/sigs~ 3 2;
#X obj 446 180 else/sigs~ 1 0;
#X obj 527 152 tgl 16 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 445 151 tgl 16 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X connect 0 0 1 0;
#X connect 1 0 7 0;
#X connect 4 0 7 0;
#X connect 5 0 7 0;
#X connect 7 0 3 0;
#X connect 8 0 6 0;
#X connect 12 0 8 0;
#X connect 13 0 8 2;
#X connect 14 0 13 1;
#X connect 15 0 13 0;
#X restore 429 318 pd multichannel;
#N canvas 730 240 504 521 bias/regularity 0;
#X obj 188 354 else/out~;
#X floatatom 172 222 7 0 44100 0 - - - 12;
#X obj 175 195 hsl 140 18 4.1 44100 1 0 empty empty empty -2 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 235 239 else/knob 40 0 1 0 0.5 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0.5;
#X floatatom 235 288 5 0 0 0 - - - 0;
#X obj 282 239 else/knob 40 0 1 0 0 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0;
#X floatatom 282 288 5 0 0 0 - - - 0;
#X text 237 219 bias;
#X text 278 219 regularity;
#X text 139 223 rate;
#X obj 189 314 else/velvet~ 440;
#X text 76 22 The polarity bias controls the chance that the impulse is positive or negative. The default value is 0.5 \, which means that both have equal (50-50) chance. For a bias of '0' \, only positive impulses appear \, while you have only negative at a bias of '1'.;
#X text 76 92 The regularity value \, from 0 to 1 \, controls the regularity of impulses. For a value of 0 you have completely random and irregular values for the impulses anywhere within the period. When the value increases \, the random range within the period decreases and it becomes fully regular at a value of 1!;
#X text 96 442 For a bias of 0 and regularity of 1 \, the velvet noise becomes the same as [impulse~].;
#X connect 1 0 10 0;
#X connect 2 0 1 0;
#X connect 3 0 4 0;
#X connect 4 0 10 1;
#X connect 5 0 6 0;
#X connect 6 0 10 2;
#X connect 10 0 0 0;
#X restore 412 274 pd bias/regularity;
#X obj 200 252 else/velvet~ 440;
#X floatatom 200 221 6 0 44100 0 - - - 12;
#X text 254 217 rate in Hz (from 0 to sample rate), f 17;
#X obj 203 194 hsl 140 18 4.1 44100 1 0 empty empty empty -2 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X text 37 232 see also:;
#X obj 34 279 else/impulse2~;
#X obj 34 253 else/dust2~;
#X text 134 513 -ch <float>: number of output channels (default 1);
#X text 120 360 float/signal(s) - frequency in hz, f 68;
#X text 48 91 [velvet~] is a velvet noise generator \, which randomly chooses either positive or negative impulses at random positions in a given period set in Hz. A polarity bias is possible to set the amount of positive and negative impulses \, and a regularity parameter forces an impulse regularity wihtout randomness. The object has support for multichannel. Values up to the sample rate are possible. Note that at the sample rate \, the object becomes a clipped white noise \, like you get with [white~ -clip]., f 74;
#X obj 34 305 else/white~;
#X connect 39 0 11 0;
#X connect 40 0 39 0;
#X connect 42 0 40 0;
