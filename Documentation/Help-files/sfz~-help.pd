#N canvas 481 23 559 696 10;
#X obj 182 245 else/out~;
#X obj 2 3 cnv 15 301 42 empty empty sfz~ 20 20 2 37 #e0e0e0 #000000 0;
#X obj 305 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 2 3 graph;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 304 3 pd;
#X obj 344 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 22 40 cnv 4 4 4 empty empty SFZ\ hybrid\ sample\ player 0 28 2 18 #e0e0e0 #000000 0;
#X obj 457 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 477 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 514 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 463 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 501 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 1 666 cnv 15 552 21 empty \$0-pddp.cnv.footer empty 20 12 0 14 #dcdcdc #404040 0;
#X obj 1 309 cnv 3 550 3 empty \$0-pddp.cnv.inlets inlet 8 12 0 13 #dcdcdc #000000 0;
#X obj 1 582 cnv 3 550 3 empty \$0-pddp.cnv.outlets outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 1 635 cnv 3 550 3 empty \$0-pddp.cnv.argument arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 155 147 else/keyboard 12 53 3 3 0 0 empty empty;
#X obj 77 589 cnv 17 3 17 empty \$0-pddp.cnv.let.n 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 77 609 cnv 17 3 17 empty \$0-pddp.cnv.let.r 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 163 590 signal;
#X text 163 610 signal;
#X text 206 590 - left output signal of stereo output, f 39;
#X text 206 610 - right output signal of stereo output, f 39;
#X text 143 642 1) symbol;
#X obj 311 114 else/openfile -h https://sfzformat.com/;
#N canvas 668 54 416 538 MIDI-in 0;
#N canvas 396 60 656 589 MIDI-input 0;
#X obj 109 116 ctlin;
#X obj 130 194 notein;
#X obj 159 391 polytouchin;
#X obj 49 33 pgmin;
#X obj 133 340 touchin;
#X obj 101 548 outlet;
#X obj 119 289 bendin;
#X obj 49 59 - 1;
#X msg 375 453 bend \$1;
#X obj 292 319 vsl 22 100 0 16384 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 375 321 sel 0;
#X obj 375 373 line;
#X msg 311 286 set \$1;
#X obj 375 400 change;
#X msg 375 347 8192 150;
#X obj 292 261 else/initmess 8192;
#X obj 375 297 else/mouse;
#X obj 375 424 else/rint;
#X msg 49 85 pgm \$1;
#X obj 77 143 pack f f;
#X msg 77 164 ctl \$1 \$2;
#X obj 101 216 pack f f;
#X msg 101 237 note \$1 \$2;
#X msg 119 311 bend \$1;
#X msg 133 362 touch \$1;
#X obj 145 415 pack f f;
#X msg 145 436 polytouch \$1 \$2;
#X text 231 172 Note that vanilla's [pgmin] object is indexed from 1 so you need to subtract 1 to use it on [sfz~] \, which is indexed from 0 ([pgm.in] from ELSE is also indexed from 0 by the way). The example below emulates a bend wheel \, maybe an extra object for the future...;
#X text 245 37 Using Vanilla's MIDI input objects for specific MIDI messages. the channel values are not needed!, f 49;
#X text 335 80 control change: value \, control, f 51;
#X text 255 80 ctl <f \, f> -;
#X text 335 107 pich bend: value, f 51;
#X text 335 121 channel aftertouch: value, f 51;
#X text 267 107 bend <f> -;
#X text 237 121 touch <float> -;
#X text 219 135 polytouch <f \, f> -;
#X text 335 135 key aftertouch: value \, key, f 51;
#X text 335 94 program change: program, f 51;
#X text 249 94 pgm <float> -;
#X connect 0 0 19 0;
#X connect 0 1 19 1;
#X connect 1 0 21 0;
#X connect 1 1 21 1;
#X connect 2 0 25 0;
#X connect 2 1 25 1;
#X connect 3 0 7 0;
#X connect 4 0 24 0;
#X connect 6 0 23 0;
#X connect 7 0 18 0;
#X connect 8 0 5 0;
#X connect 9 0 11 0;
#X connect 10 0 14 0;
#X connect 11 0 12 0;
#X connect 11 0 13 0;
#X connect 12 0 9 0;
#X connect 13 0 17 0;
#X connect 14 0 11 0;
#X connect 15 0 9 0;
#X connect 16 0 10 0;
#X connect 17 0 8 0;
#X connect 18 0 5 0;
#X connect 19 0 20 0;
#X connect 20 0 5 0;
#X connect 21 0 22 0;
#X connect 22 0 5 0;
#X connect 23 0 5 0;
#X connect 24 0 5 0;
#X connect 25 0 26 0;
#X connect 26 0 5 0;
#X restore 145 339 pd MIDI-input;
#N canvas 558 88 641 514 control-messages 0;
#X obj 292 406 tgl 17 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 127;
#X obj 193 406 tgl 17 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 127;
#X obj 28 439 outlet;
#X obj 104 188 vsl 18 100 0 127 0 0 empty empty empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 104 337 s \$0-ctl;
#X obj 58 409 r \$0-ctl;
#X obj 193 460 s \$0-ctl;
#X obj 292 460 s \$0-ctl;
#X obj 367 229 tgl 17 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 127;
#X obj 367 289 s \$0-ctl;
#X text 186 385 sustain pedal;
#X text 286 385 tonal or sostenuto pedal;
#X text 384 428 see also:;
#X text 91 163 modulation;
#X text 169 163 volume;
#X obj 181 337 s \$0-ctl;
#X obj 181 188 vsl 18 100 0 127 0 0 empty empty empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X text 74 15 The control change parameters are programmed in a given synthesizer \, but if usually follows some standards like the messages where using here., f 72;
#X text 349 168 For reference \, see:;
#X obj 266 336 s \$0-ctl;
#X obj 266 187 vsl 18 100 0 127 0 0 empty empty empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X text 263 163 pan;
#X msg 298 278 64;
#X text 391 229 flush note ons (panic);
#X msg 181 308 ctl \$1 7;
#X msg 266 307 ctl \$1 10;
#X msg 367 260 ctl \$1 123;
#X msg 292 434 ctl \$1 66;
#X obj 382 452 else/suspedal;
#X obj 473 169 else/openfile -h https://www.midi.org/specifications-old/item/table-3-control-change-messages-data-bytes-2 MIDI Specifications;
#X obj 28 63 else/keyboard 17 80 5 2 0 0 empty empty;
#X msg 193 434 ctl \$1 64;
#X msg 104 305 ctl \$1 1;
#X connect 0 0 27 0;
#X connect 1 0 31 0;
#X connect 3 0 32 0;
#X connect 5 0 2 0;
#X connect 8 0 26 0;
#X connect 16 0 24 0;
#X connect 20 0 25 0;
#X connect 22 0 25 0;
#X connect 24 0 15 0;
#X connect 25 0 19 0;
#X connect 26 0 9 0;
#X connect 27 0 7 0;
#X connect 30 0 2 0;
#X connect 31 0 6 0;
#X connect 32 0 4 0;
#X restore 161 389 pd control-messages;
#X obj 132 309 midiin;
#X obj 115 257 tgl 17 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 1;
#X text 235 338 <-- open;
#X text 218 371 More on:;
#X obj 115 284 else/midi -loop midi-seq.mid;
#X obj 129 457 else/out~;
#X text 33 21 The supported MIDI messags are:;
#X text 99 43 - 'note' for Note messages \; - 'ctl' for Control Change \; - 'pgm' for Program Change \; - 'bend' for Pitch Bend \; - 'touchin' for Channel Aftertouch \; - 'polytouchin' for Key Aftertouch;
#X text 36 127 In the example of the parent patch \, the list message as given by [keyboard] acts in the same way as a 'note' message., f 53;
#X text 36 167 Raw MIDI is also possible via float input \, so you can use Pd Vanilla's [midiin] object or play a MIDI file from [midi]. You can also use vanilla's other MIDI objects like [pgmin] of course or the ones from ELSE \, such as [pgm.in] \, see [pd MIDI-input] below., f 53;
#X obj 115 428 else/sfz~ sfz-example;
#X connect 0 0 12 0;
#X connect 1 0 12 0;
#X connect 2 0 12 0;
#X connect 3 0 6 0;
#X connect 6 0 12 0;
#X connect 12 0 7 0;
#X connect 12 1 7 1;
#X restore 469 252 pd MIDI-in;
#N canvas 396 69 634 524 tuning_&_more 0;
#X msg 81 165 panic;
#X obj 104 221 hsl 128 15 -1200 1200 0 0 empty empty empty -2 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X floatatom 101 245 10 0 0 0 - - - 0;
#X msg 101 269 transp \$1;
#X text 100 198 set transposition in cents;
#X text 125 162 Big panic red button \, resets whole synth, f 21;
#X obj 96 437 else/out~;
#X obj 28 25 else/keyboard 17 80 5 3 0 0 empty empty;
#X msg 57 128 flush;
#X floatatom 189 265 5 0 0 0 - - - 0;
#X obj 81 391 else/sfz~ sfz-example;
#X text 101 122 send note offs for all notes, f 16;
#N canvas 262 256 630 367 scale 0;
#X text 87 87 bohlen-pierce;
#X text 100 108 quarter tones;
#X obj 41 24 loadbang;
#X msg 273 121 base 57;
#X text 110 136 equal temperament;
#X obj 273 175 s \$0-tuning;
#X msg 283 146 base 60;
#X obj 41 225 s \$0-tuning;
#X text 77 50 eigth tones;
#X text 335 146 (default);
#X obj 52 273 r \$0-tuning;
#X obj 52 302 outlet;
#X text 275 100 Set fundamental;
#X msg 41 50 48 2;
#X msg 53 86 13 3;
#X msg 64 109 24 2;
#X msg 74 137 12 2;
#X text 328 121 (decimal values allowed);
#X obj 41 166 else/eqdiv;
#X obj 41 194 else/insert scale;
#X text 343 289 see also:;
#X obj 407 289 else/retune;
#X text 195 30 This example uses the [eqdiv] object to generate scales with equal divisions and starts with an eighth tone scale., f 40;
#X text 188 207 The 'base' message sets the scale fundamental in MIDI pitch (60 by default \, which is "C4"). Just 'scale' sets to the regular 12 tone temperament. Scales can have steps different that 12 and may not be based on the octave (such as the bohlen-Pierce scale). If picthes fall out of the 0-127 range \, the keys are muted. This behaves similarly to the [retune] object.;
#X connect 2 0 13 0;
#X connect 3 0 5 0;
#X connect 6 0 5 0;
#X connect 10 0 11 0;
#X connect 13 0 18 0;
#X connect 14 0 18 0;
#X connect 15 0 18 0;
#X connect 16 0 18 0;
#X connect 18 0 19 0;
#X connect 19 0 7 0;
#X restore 115 298 pd scale;
#X text 323 127 [sfz~] also has microtonal capabilities. The 'scale' message sets a scale in cents and you can previously set a base value with the 'base' message. See [pd scale] for more details., f 41;
#X msg 197 319 scala diamond7.scl;
#X text 323 194 The 'scala' message opens files in the scala format. See also:, f 41;
#X obj 477 216 else/scala;
#X text 229 264 set hz value for A4;
#X msg 189 288 a4 \$1;
#X connect 0 0 10 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 10 0;
#X connect 7 0 10 0;
#X connect 8 0 10 0;
#X connect 9 0 18 0;
#X connect 10 0 6 0;
#X connect 10 1 6 1;
#X connect 12 0 10 0;
#X connect 14 0 10 0;
#X connect 18 0 10 0;
#X restore 433 274 pd tuning_&_more;
#X text 205 642 - sets file to load (default none);
#N canvas 578 136 642 386 basic 0;
#X obj 128 288 else/out~;
#X obj 114 259 else/sfz~ sfz-example;
#X listbox 114 164 8 0 0 0 - - - 12;
#X text 28 25 shift + click;
#X text 10 44 to hold keys -->;
#X text 47 156 Pitch \; Velocity \; Channel;
#X obj 114 16 else/keyboard 17 80 4 3 0 0 empty empty;
#X msg 199 225 version;
#X text 161 114 Play notes with either 'note' or list messages \, whose arguments are: MIDI Pitch \, Velocity and optional channel number., f 65;
#X msg 190 192 ctl \$1 1;
#X obj 193 162 hsl 149 17 0 127 0 0 empty empty empty -2 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X text 367 155 There are also other MIDI like messages \, such as 'ctl' for Control Change., f 29;
#X text 257 225 print sfizz version;
#X text 262 261 the .sfz extension is implied;
#X connect 1 0 0 0;
#X connect 1 1 0 1;
#X connect 2 0 1 0;
#X connect 6 0 2 0;
#X connect 7 0 1 0;
#X connect 9 0 1 0;
#X connect 10 0 9 0;
#X restore 480 229 pd basic;
#X text 51 89 [sfz~] is based on "sfizz" a SFZ format sample player. For more details on the SFZ format \, players and instruments for download \, see:, f 67;
#X obj 155 215 else/sfz~ sfz-example.sfz;
#X text 29 239 see also:;
#X obj 26 264 else/sfont~;
#X text 182 451 panic -;
#X text 232 542 transposition: cents \, channel (optional), f 51;
#X obj 78 316 cnv 17 3 260 empty \$0-pddp.cnv.let.0 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 170 559 version -;
#X text 232 559 prints version info on terminal, f 51;
#X text 140 468 scale <list> -;
#X text 140 494 base <float> -;
#X text 232 494 base MIDI pitch for scale, f 51;
#X text 232 468 scale in cents to retune (12-tone temperament if no list is given), f 51;
#X text 128 542 transp <float> -;
#X text 188 361 list -;
#X text 232 361 same as "note" message, f 51;
#X text 182 318 float -;
#X text 232 318 raw MIDI input, f 51;
#X text 134 332 open <symbol> -;
#X text 232 347 note: key \, velocity, f 51;
#X text 134 405 touch <float> -;
#X text 98 347 note <float \, float> -;
#X text 104 376 ctl <float \, float> -;
#X text 140 391 bend <float> -;
#X text 116 419 polytouch <f \, f> -;
#X text 232 405 channel aftertouch: value, f 51;
#X text 232 419 key aftertouch: value \, key, f 51;
#X text 232 391 pitch bend: value, f 51;
#X text 232 376 control change: value \, control, f 51;
#X text 232 332 load soundfont file (.sfz extension implied), f 51;
#X text 182 435 flush -;
#X text 232 435 sends note offs for all notes to clear hanging ones;
#X text 232 451 stops all sounds immediately, f 51;
#X text 128 511 scala <symbol> -;
#X text 232 511 open scala tuning file, f 51;
#X text 232 527 sets reference frequency for A4 in hertz, f 51;
#X text 152 527 a4 <float> -;
#X connect 16 0 30 0;
#X connect 30 0 0 0;
#X connect 30 1 0 1;
