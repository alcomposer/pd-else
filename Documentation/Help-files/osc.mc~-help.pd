#N canvas 426 39 559 594 10;
#X obj 4 344 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 457 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 536 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 113 467 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 4 566 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#N canvas 207 34 366 264 (subpatch) 0;
#X obj 51 101 tgl 42 0 \$0-tgl-s \$0-tgl-r empty 1 8 1 9 #dcdcdc #7c7c7c #fcfcfc 0 1;
#X obj 215 68 route dsp;
#X obj 215 37 receive pd;
#N canvas 977 77 379 291 set_color 0;
#X obj 47 30 inlet;
#X obj 147 200 s \$0-cnv;
#X obj 47 83 select 0 1;
#X obj 47 220 s \$0-tgl-r;
#N canvas 0 22 712 637 off 0;
#X obj 490 220 * -1;
#X obj 424 300 +;
#X obj 409 325 +;
#X obj 347 219 * -65536;
#X obj 424 220 * -256;
#X obj 409 356 - 1;
#X obj 390 189 unpack f f f;
#X obj 225 295 +;
#X obj 210 320 +;
#X obj 148 214 * -65536;
#X obj 225 215 * -256;
#X obj 291 215 * -1;
#X obj 210 351 - 1;
#X obj 191 184 unpack f f f;
#X obj 379 423 pack;
#X msg 395 152 124 124 124;
#X msg 203 154 220 220 220;
#X obj 238 121 t b b;
#X obj 238 81 inlet;
#X obj 378 485 outlet;
#X connect 0 0 1 1;
#X connect 1 0 2 1;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 1 0;
#X connect 5 0 14 1;
#X connect 6 0 3 0;
#X connect 6 1 4 0;
#X connect 6 2 0 0;
#X connect 7 0 8 1;
#X connect 8 0 12 0;
#X connect 9 0 8 0;
#X connect 10 0 7 0;
#X connect 11 0 7 1;
#X connect 12 0 14 0;
#X connect 13 0 9 0;
#X connect 13 1 10 0;
#X connect 13 2 11 0;
#X connect 14 0 19 0;
#X connect 15 0 6 0;
#X connect 16 0 13 0;
#X connect 17 0 16 0;
#X connect 17 1 15 0;
#X connect 18 0 17 0;
#X restore 47 113 pd off;
#X msg 47 180 color \$1 \$2 0;
#X msg 147 131 -4.86997e+06 -1.34937e+07;
#X msg 147 171 color \$1 0 \$2;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 6 0;
#X connect 4 0 5 0;
#X connect 4 0 7 0;
#X connect 5 0 3 0;
#X connect 6 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 1 0;
#X restore 215 165 pd set_color;
#X obj 135 122 r \$0-tgl-s;
#N canvas 121 482 450 300 (subpatch) 0;
#X obj 101 101 cnv 25 40 25 empty \$0-cnv DSP 3 13 0 20 #dcdcdc #7c7c7c 0;
#X coords 0 -1 1 1 42 27 1 100 100;
#X restore 51 144 pd;
#X obj 226 139 s \$0-tgl-r;
#X msg 226 115 set \$1;
#X msg 135 177 \; pd dsp \$1;
#N canvas 256 32 278 194 load_check 0;
#X obj 136 53 sig~ 1;
#X obj 74 24 loadbang;
#X obj 136 86 snapshot~;
#X obj 91 52 del 5;
#X obj 136 151 outlet;
#X obj 74 103 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 74 126 switch~;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 1 0 5 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 3 0 5 0;
#X connect 5 0 6 0;
#X restore 51 72 pd load_check;
#X connect 1 0 3 0;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 4 0 8 0;
#X connect 4 0 3 0;
#X connect 7 0 6 0;
#X connect 9 0 0 0;
#X coords 0 -1 1 1 44 72 2 50 100;
#X restore 492 71 pd;
#X obj 113 352 cnv 17 3 52 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 113 408 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 153 468 signals;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 23 40 cnv 4 4 4 empty empty Multi-channel\ oscillator\ bank 0 28 2 18 #e0e0e0 #000000 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 3 3 cnv 15 301 42 empty empty osc.mc~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 2 3 graph;
#X obj 113 432 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 153 434 signals;
#X text 153 409 signals;
#X text 153 354 signals;
#X text 211 354 - frequency values;
#X text 211 409 - phase sync;
#X text 211 434 - phase modulation;
#X obj 189 277 else/out.mc~;
#X obj 189 212 else/sigs~ 400 800;
#X floatatom 189 180 5 0 0 0 - - - 12;
#X floatatom 294 180 5 0 0 0 - - - 12;
#X text 311 212 <- frequencies;
#X text 211 468 - multichannel signal from oscillator bank;
#N canvas 616 58 421 441 phase 0;
#X obj 110 293 else/osc.mc~;
#X obj 110 324 else/out.mc~;
#X obj 110 189 else/sigs~ 400 800;
#X floatatom 110 157 5 0 0 0 - - - 12;
#X floatatom 215 157 5 0 0 0 - - - 12;
#X text 232 189 <- frequencies;
#X obj 144 258 else/imp~ 300;
#X floatatom 144 226 5 0 0 0 - - - 12;
#X text 186 227 <- sync frequency;
#X text 25 31 The middle inlet takes impulses to set a sync frequency. The number of channels is defined by the frequency input. You can have the same number of channels for the sync input (or phase input shown next) \, but if you have a smaller number of channels \, they wrap around and copy the first channels until reaching the number of channels of the frequency input. This is specially useful to use a single channel value to apply to every oscillator as below.;
#X connect 0 0 1 0;
#X connect 2 0 0 0;
#X connect 3 0 2 0;
#X connect 4 0 2 1;
#X connect 6 0 0 1;
#X connect 7 0 6 0;
#X restore 447 276 pd phase sync;
#N canvas 616 58 391 406 phase 0;
#X obj 82 305 else/out.mc~;
#X obj 82 143 else/sigs~ 400 800;
#X floatatom 82 111 5 0 0 0 - - - 12;
#X floatatom 187 111 5 0 0 0 - - - 12;
#X text 204 143 <- frequencies;
#X text 67 43 The right inlet sets phase modulation and works like the sync input., f 38;
#X obj 151 208 else/osc.mc~;
#X obj 151 184 else/sigs~ 300 600;
#X obj 151 236 *~;
#X obj 82 274 else/osc.mc~;
#X obj 188 242 else/sigs~ 0.5 0.25;
#X connect 1 0 9 0;
#X connect 2 0 1 0;
#X connect 3 0 1 1;
#X connect 6 0 8 0;
#X connect 7 0 6 0;
#X connect 8 0 9 2;
#X connect 9 0 0 0;
#X connect 10 0 8 1;
#X restore 447 302 pd phase mod;
#X text 129 370 sum <float>;
#X text 211 370 - non zero sums the oscillators into a single channel;
#X obj 4 496 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 156 509 -sum: sums the oscillators into a single channel;
#X text 59 87 [osc.mc~] takes multichannel signals to set frequencies \, phase sync and phase modulation of sine oscillators. The number of oscillators is defined by the number of channels in the frequency input signal., f 67;
#X text 60 128 The output is also a multichannel signal by default \, but you can “sum” them into a single channel with the “sum” flag or message., f 67;
#X msg 125 211 sum \$1;
#X obj 125 184 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#N canvas 581 90 494 469 basic 0;
#X obj 115 201 else/osc.mc~ -sum 440 880 1320;
#X obj 115 142 else/insert set;
#X listbox 115 108 20 0 0 0 - - - 0;
#X msg 115 44 340 580 720 950;
#X msg 132 79 440 880 1320;
#X obj 115 232 else/out~;
#X text 266 67 Instead of multichannel signal inputs you can also send it lists of frequencies (via the 'set' message) or set them via arguments., f 30;
#X obj 115 167 else/display;
#X text 126 344 Note that this object is quite similar to, f 25;
#X text 162 408 The main difference is that [osc.mc~] takes signal inputs., f 31;
#X obj 234 366 else/oscbank2~;
#X connect 0 0 5 0;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 7 0 0 0;
#X restore 447 250 pd basic;
#X obj 189 246 else/osc.mc~ -sum;
#X text 135 387 set <list>;
#X text 211 387 - set frequencies;
#X text 163 545 1) list - list of frequencies (default 0);
#X connect 28 0 44 0;
#X connect 29 0 28 0;
#X connect 30 0 28 1;
#X connect 41 0 44 0;
#X connect 42 0 41 0;
#X connect 44 0 27 0;
