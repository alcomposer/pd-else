#N canvas 406 23 560 713 10;
#X obj 198 183 else/out~;
#X floatatom 198 125 5 0 0 0 - - - 12;
#X text 238 128 frequency (Hz by default);
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 23 40 cnv 4 4 4 empty empty "Plaits"\ module\ from\ "Mutable\ Instruments" 0 28 2 18 #e0e0e0 #000000 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 3 3 cnv 15 301 42 empty empty plaits~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 95 74 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 3 3 graph;
#X obj 4 242 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 460 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 587 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 91 468 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 91 249 cnv 17 3 165 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 4 686 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X text 212 247 - pitch input;
#X text 130 247 float/signal;
#X text 166 468 signal;
#X text 212 468 - regular signal output;
#X obj 91 489 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 166 490 signal;
#X text 212 490 - secondary (auxiliary) signal output;
#X obj 91 510 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 167 593 1) float - pitch (default 0), f 50;
#X obj 4 532 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 139 553 -model <float>: set model number (default 0), f 57;
#X text 139 568 -trigger: set to trigger mode (default regular), f 57;
#X text 178 261 bang;
#X text 212 261 - control trigger (when in trigger mode);
#X text 112 289 trigger <float>;
#X text 212 289 - non zero sets to trigger mode;
#X text 124 303 model <float>;
#X text 100 317 harmonics <float>;
#X text 212 317 - set harmonics (0-1);
#X text 118 331 timbre <float>;
#X text 212 330 - set timbre (0-1);
#X text 124 345 morph <float>;
#X text 212 345 - set morph (0-1);
#X text 118 359 cutoff <float>;
#X text 124 373 decay <float>;
#X text 212 373 - set LPG decay (0-1);
#X text 212 359 - set LPG (LowPass Gate) cutoff/color (0-1);
#X text 167 653 5) float - cutoff (default 0.5), f 50;
#X text 167 668 6) float - decay (default 0.5), f 50;
#X obj 198 156 else/plaits~ 500;
#N canvas 402 104 653 382 frequency 0;
#X obj 124 299 else/out~;
#X text 204 171 F#4;
#X msg 174 200 midi \, 69;
#X msg 185 227 hz \, 220;
#X obj 433 118 numbox~ 6 10 100 #C0C0C4 #440008 10 0 0 60;
#X obj 433 182 +~;
#X obj 398 279 else/out~;
#X obj 433 235 else/plaits~ -midi;
#X obj 476 182 else/sine~ -midi;
#X obj 476 206 *~ 30;
#X obj 476 155 +~ 7.1;
#X msg 150 171 cv \, 0.1;
#X obj 150 265 else/plaits~ -cv -0.7;
#X text 389 37 [plaits~] takes signal input for frequency in each mode and you can use it to perform FM. If you have a 'midi' input \, this is 'exponential FM'., f 33;
#X text 23 30 By default \, the pitch input is in Hertz \, but you can change to "midi" \, "cv" (control voltage). In '-cv' the incoming signal is treated as "volts" and the reference value of 0 volts is "middle C" ("60" in MIDI pitch). The signal is then normalized as if the input from -1 to 1 corresponds to the standard of -5V to +5V and we also consider the "Volts per octave" standard \, so you can go down and up 5 octaves with a signal from -1 to +1 (every change of 0.2 is an octave). Use flags to set to a different mode at load time or the messages to change between settings., f 56;
#X connect 2 0 12 0;
#X connect 3 0 12 0;
#X connect 4 0 5 0;
#X connect 4 0 10 0;
#X connect 5 0 7 0;
#X connect 7 0 6 0;
#X connect 7 1 6 1;
#X connect 8 0 9 0;
#X connect 9 0 5 1;
#X connect 10 0 8 0;
#X connect 11 0 12 0;
#X connect 12 0 0 0;
#X connect 12 1 0 1;
#X restore 462 148 pd frequency;
#N canvas 417 90 841 557 +details 0;
#X obj 101 448 else/out~;
#X msg 142 253 model \$1;
#X obj 235 509 else/display;
#N canvas 501 59 376 325 (subpatch) 0;
#X obj 108 108 vradio 18 1 0 8 \$0-radio-1 \$0-set-radio-1 empty 0 -8 0 10 #dfdfdf #dfdfdf #000000 0;
#X obj 126 108 vradio 18 1 0 8 \$0-radio-2 \$0-set-radio-2 empty 0 -8 0 10 #dfdfdf #dfdfdf #000000 0;
#X obj 202 209 outlet;
#N canvas 181 203 498 298 radio-1 0;
#X obj 90 43 r \$0-radio-1;
#X msg 117 127 color #dfdfdf #dfdfdf #000000;
#X obj 90 71 t f b;
#X obj 125 153 s \$0-set-radio-2;
#X obj 132 95 s \$0-set-radio-1;
#X obj 90 204 outlet;
#X obj 117 176 s \$0-set-radio-3;
#X msg 214 23 color #dfdfdf #00ff00 #000000;
#X msg 132 71 color #dfdfdf #00b1a5 #000000;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 1 0 6 0;
#X connect 2 0 5 0;
#X connect 2 1 1 0;
#X connect 2 1 8 0;
#X connect 8 0 4 0;
#X restore 202 100 pd radio-1;
#N canvas 202 189 450 300 radio-2 0;
#X obj 85 98 t f b;
#X obj 85 231 outlet;
#X obj 85 40 r \$0-radio-2;
#X obj 127 122 s \$0-set-radio-2;
#X obj 85 68 + 8;
#X msg 112 154 color #dfdfdf #dfdfdf #000000;
#X obj 123 178 s \$0-set-radio-1;
#X obj 112 199 s \$0-set-radio-3;
#X msg 127 98 color #dfdfdf #ff518d #000000;
#X connect 0 0 1 0;
#X connect 0 1 5 0;
#X connect 0 1 8 0;
#X connect 2 0 4 0;
#X connect 4 0 0 0;
#X connect 5 0 6 0;
#X connect 5 0 7 0;
#X connect 8 0 3 0;
#X restore 223 134 pd radio-2;
#N canvas 202 189 450 300 radio-3 0;
#X obj 85 98 t f b;
#X obj 85 231 outlet;
#X obj 112 207 s \$0-set-radio-1;
#X msg 112 154 color #dfdfdf #dfdfdf #000000;
#X obj 85 40 r \$0-radio-3;
#X obj 85 68 + 16;
#X obj 130 182 s \$0-set-radio-2;
#X obj 127 122 s \$0-set-radio-3;
#X msg 127 98 color #dfdfdf #f4560a #000000;
#X connect 0 0 1 0;
#X connect 0 1 3 0;
#X connect 0 1 8 0;
#X connect 3 0 2 0;
#X connect 3 0 6 0;
#X connect 4 0 5 0;
#X connect 5 0 0 0;
#X connect 8 0 7 0;
#X restore 234 170 pd radio-3;
#X obj 144 108 vradio 18 1 0 8 \$0-radio-3 \$0-set-radio-3 empty 0 -8 0 10 #dfdfdf #f4560a #000000 0;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 5 0 2 0;
#X coords 0 -1 1 1 73 167 2 100 100;
#X restore 142 76 pd;
#X floatatom 164 313 5 0 0 0 - - - 12;
#X text 205 314 pitch;
#N canvas 278 205 477 348 LPG 0;
#X obj 166 282 outlet;
#X obj 166 143 bng 35 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X msg 293 206 decay \$1;
#X obj 88 149 tgl 30 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X msg 222 206 cutoff \$1;
#X msg 88 197 trigger \$1;
#X text 59 17 Use the 'trigger' message to set in and out of 'trigger' mode. Alternatively \, the '-trigger' flag sets to trigger mode at load time. In this mode you have to send bangs to trigger a built in LPG (LowPass Gate). The LPG has a cutoff setting and a decay parameter. This mode is useful for percussive sounds but note that for modes 12-15 that the cutoff and decay settings are disabled., f 62;
#X obj 222 136 else/knob 50 0 1 0 0.5 \$0-cutoff \$0-set-cutoff #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0;
#X obj 293 136 else/knob 50 0 1 0 0.5 \$0-decay \$0-set-decay #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0;
#X text 226 115 Cutoff;
#X text 302 115 Decay;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 5 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 7 0 4 0;
#X connect 8 0 2 0;
#X restore 175 341 pd LPG;
#X text 222 340 <-- open for trigger mode and LPG (LowPass Gate settings);
#X obj 235 478 route name;
#X msg 181 371 dump;
#X msg 231 371 print;
#X obj 256 446 print info;
#X obj 495 387 else/openfile -h https://pichenettes.github.io/mutable-instruments-documentation/modules/plaits/manual/# Manual;
#X text 295 373 Click on this link for the original manual from Mutable Instruments:, f 36;
#N canvas 635 23 437 432 messages 0;
#X msg 228 141 harmonics \$1;
#X msg 256 192 timbre \$1;
#X msg 274 244 morph \$1;
#X obj 249 305 outlet;
#X obj 115 119 else/knob 50 0 1 0 0.5 \$0-harmonics \$0-set-harmonics #dfdfdf #7c7c7c black 0 0 0 0 1 320 0 0 0.5;
#X text 111 104 Harmonics;
#X obj 115 188 else/knob 50 0 1 0 0.5 \$0-timbre \$0-set-timbre #dfdfdf #7c7c7c black 0 0 0 0 1 320 0 0 0.5;
#X text 119 173 Timbre;
#X obj 115 257 else/knob 50 0 1 0 0.5 \$0-morph \$0-set-morph #dfdfdf #7c7c7c black 0 0 0 0 1 320 0 0 0.5;
#X text 123 242 Morph;
#X obj 227 120 r \$0-harmonics;
#X obj 256 170 r \$0-timbre;
#X obj 274 223 r \$0-morph;
#X connect 0 0 3 0;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X connect 10 0 0 0;
#X connect 11 0 1 0;
#X connect 12 0 2 0;
#X coords 0 -1 1 1 81 214 2 100 100;
#X restore 32 111 pd messages;
#X text 532 12 Plaits has an auxiliary audio output with a different sound also depending on the model used. The 'model' message is used to choose between these options. For a description of each option \, check subpatches below:, f 43;
#X text 36 12 Plaits has 24 synthesis techniques (or 'models'/'engines'). It also contains a built-in LPG (Low-Pass Gate) with cutoff and decay settings that you can use to trigger an enveloped sound. The controls are: 'Frequency' \, 'Harmonics' \, 'Timbre' and 'Morph' and the way they act depends on the chosen engine., f 80;
#X text 325 285 You can also use the '-model' flag to set a model at load time., f 64;
#X obj 32 343 else/display -noflash 14;
#X obj 142 281 else/display;
#X text 572 374 The 3rd row of he last 8 modes are better described here., f 35;
#X obj 714 388 else/openfile -h https://pichenettes.github.io/mutable-instruments-documentation/modules/plaits/firmware/ Firmware update;
#N canvas 165 81 602 365 10-Particle 0;
#X obj 65 128 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 HARMONICS:;
#X obj 65 168 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 TIMBRE:;
#X obj 65 211 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 MORPH:;
#X obj 68 260 else/note 102 13 Menlo empty 4 0 0 0 0 255 227 198 1 1 AUX OUT;
#X obj 108 26 else/note 314 13 Menlo empty 4 255 255 255 0 124 124 124 1 1 MODEL 10) Particle Noise;
#X text 139 62 This engine consists of Dust noise processed by networks of all-pass or band-pass filters., f 45;
#X text 194 128 Sets amount of frequency randomization., f 43;
#X text 194 168 Sets particle's density., f 47;
#X text 194 206 Sets filter type – reverberating all-pass network below 0.5 \, then increasingly resonant band-pass filters above., f 57;
#X text 196 260 The raw dust noise., f 46;
#X restore 450 146 pd 10-Particle Noise;
#N canvas 395 23 606 504 11-Inharmonic 0;
#X obj 65 205 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 HARMONICS:;
#X obj 65 245 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 TIMBRE:;
#X obj 65 288 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 MORPH:;
#X obj 68 337 else/note 102 13 Menlo empty 4 0 0 0 0 255 227 198 1 1 AUX OUT;
#X obj 134 28 else/note 314 13 Menlo empty 4 255 255 255 0 124 124 124 1 1 MODEL 11) Inharmonic String Modelling;
#X text 194 283 Sets filter type – reverberating all-pass network below 0.5 \, then increasingly resonant band-pass filters above.;
#X text 196 337 The raw dust noise., f 46;
#X text 194 205 Sets amount of inharmonicity \, or material selection.;
#X text 194 245 Sets excitation brightness and dust density., f 47;
#X text 102 71 This engine and the next one is like a mini-Rings (another module from Mutable Instruments)! When the TRIG input is not patched \, the resonator is excited by an internal dust noise., f 63;
#X text 105 130 Please refer to the Rings manual for more information about modulated/inharmonic string synthesis \, and modal resonators., f 54;
#X text 88 389 Note that Plaits uses a less powerful processor than Rings \, and is thus limited to 3 voices of polyphony in inharmonic string modeling mode \, and 1 voice of polyphony with 24 partials in modal resonator mode. Plaits does not allow you to control the position of the excitation \, which is set to 25% of the length of the string/bar/tube., f 73;
#X obj 188 164 else/openfile -h https://pichenettes.github.io/mutable-instruments-documentation/modules/plaits/rings/manual/ Rings' Manual;
#X restore 450 166 pd 11-Inharmonic String Modeling;
#N canvas 216 95 605 501 12-Modal 0;
#X obj 134 28 else/note 314 13 Menlo empty 4 255 255 255 0 124 124 124 1 1 MODEL 12) Modal Resonator Bank;
#X obj 65 205 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 HARMONICS:;
#X obj 65 245 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 TIMBRE:;
#X obj 65 288 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 MORPH:;
#X obj 68 337 else/note 102 13 Menlo empty 4 0 0 0 0 255 227 198 1 1 AUX OUT;
#X text 194 283 Sets filter type – reverberating all-pass network below 0.5 \, then increasingly resonant band-pass filters above.;
#X text 196 337 The raw dust noise., f 46;
#X text 194 205 Sets amount of inharmonicity \, or material selection.;
#X text 194 245 Sets excitation brightness and dust density., f 47;
#X text 102 71 This engine and the next one is like a mini-Rings (another module from Mutable Instruments)! When the TRIG input is not patched \, the resonator is excited by an internal dust noise., f 63;
#X text 105 130 Please refer to the Rings manual for more information about modulated/inharmonic string synthesis \, and modal resonators., f 54;
#X text 88 389 Note that Plaits uses a less powerful processor than Rings \, and is thus limited to 3 voices of polyphony in inharmonic string modeling mode \, and 1 voice of polyphony with 24 partials in modal resonator mode. Plaits does not allow you to control the position of the excitation \, which is set to 25% of the length of the string/bar/tube., f 73;
#X obj 188 164 else/openfile -h https://pichenettes.github.io/mutable-instruments-documentation/modules/plaits/rings/manual/ Rings' Manual;
#X restore 450 186 pd 12-Modal Resonator Bank;
#N canvas 327 73 622 533 13-Analog 0;
#X obj 73 143 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 HARMONICS:;
#X obj 73 183 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 TIMBRE:;
#X obj 73 236 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 MORPH:;
#X obj 76 286 else/note 102 13 Menlo empty 4 0 0 0 0 255 227 198 1 1 AUX OUT;
#X obj 154 20 else/note 314 13 Menlo empty 4 255 255 255 0 124 124 124 1 1 MODEL 13) Analog Bass Drum Model;
#X text 202 141 Controls attack sharpness and amount of overdrive.;
#X text 202 185 Sets brightness., f 47;
#X text 74 66 No fancy acronyms or patented technology here... Just behavioral simulation of circuits from classic drum machines! The emulated drum machine employs a bridged T-network excited by a nicely shaped pulse., f 76;
#X text 204 276 Emulation of another classic bass drum circuit using a frequency-modulated triangle VCO \, turned into a sine with a pair of diodes \, and shaped by a dirty VCA., f 54;
#X text 120 344 In order to produce percussive sounds you have to use this in trigger mode \, otherwise you'll have a continuous tone that is not particularly useful \, but its amplitude can still be modulated by the MORPH knob and the level input., f 61;
#X text 202 238 Sets decay time (internal LPG is disabled*).;
#X text 116 417 *The physical and drum models employ their own decay envelope and filter. The internal LPG is disabled for them. When the triggered \, the LEVEL input works as an accent control., f 61;
#X restore 450 206 pd 13-Analog Bass Drum Model;
#N canvas 154 80 611 402 14-Analog 0;
#X obj 73 143 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 HARMONICS:;
#X obj 73 183 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 TIMBRE:;
#X obj 73 236 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 MORPH:;
#X obj 76 286 else/note 102 13 Menlo empty 4 0 0 0 0 255 227 198 1 1 AUX OUT;
#X obj 154 20 else/note 314 13 Menlo empty 4 255 255 255 0 124 124 124 1 1 MODEL 14) Analog Snare Drum Model;
#X text 74 66 The drum machine emulation employs a bunch of bridged T-networks \, one for each mode of the shell \, excited by a nicely shaped pulse plus some band-pass filtered noise., f 76;
#X text 204 281 Another emulation based on a pair of frequency-modulated sine VCO \, mixed with high-pass filtered noise.;
#X text 202 141 Sets the balance of the harmonic and noisy components.;
#X text 202 185 Sets balance between the different modes of the drum.;
#X text 202 238 Sets decay time (internal LPG is disabled*).;
#X text 119 338 *The physical and drum models employ their own decay envelope and filter. The internal LPG is disabled for them. When the triggered \, the LEVEL input works as an accent control., f 61;
#X restore 450 226 pd 14-Analog Snare Drum Model;
#N canvas 154 80 654 408 15-Analog 0;
#X obj 73 143 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 HARMONICS:;
#X obj 73 183 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 TIMBRE:;
#X obj 73 236 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 MORPH:;
#X obj 76 286 else/note 102 13 Menlo empty 4 0 0 0 0 255 227 198 1 1 AUX OUT;
#X obj 154 20 else/note 314 13 Menlo empty 4 255 255 255 0 124 124 124 1 1 MODEL 15) Analog Hi-Hat Drum Model;
#X text 82 59 The recipe is similar for both OUT and AUX: a bunch of square oscillators generate a harsh \, metallic tone. The resulting signal is mixed with clocked noise \, sent to a HighPass Filter \, then to a VCA. OUT uses 6 square oscillators and a dirty transistor VCA., f 79;
#X text 204 281 Uses three pairs of square oscillators ring-modulating each other \, and a clean \, linear VCA., f 54;
#X text 202 141 Sets the balance of the metallic and filtered noise.;
#X text 202 185 Controls high-pass filter cutoff.;
#X text 202 238 Sets decay time (internal LPG is disabled*).;
#X text 117 333 *The physical and drum models employ their own decay envelope and filter. The internal LPG is disabled for them. When the triggered \, the LEVEL input works as an accent control., f 61;
#X restore 450 246 pd 15-Analog Hi-Hat Drum Model;
#N canvas 299 60 630 310 00-Pair 0;
#X obj 66 114 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 HARMONICS:;
#X text 194 114 Controls detuning between the two waves.;
#X obj 66 146 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 TIMBRE:;
#X text 195 140 Controls Pulse Width from narrow pulse to full square to hardsync formants, f 38;
#X obj 66 183 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 MORPH:;
#X obj 69 232 else/note 102 13 Menlo empty 4 0 0 0 0 255 227 198 1 1 AUX OUT;
#X text 190 222 Sum of two hardsync’ed waveforms \, the shape of which is controlled by MORPH and detuning by HARMONICS. A narrow pulse or wide notch results in silence!, f 52;
#X obj 158 24 else/note 314 13 Menlo empty 4 255 255 255 0 124 124 124 1 1 MODEL 0) Pair of Classic Waveforms;
#X text 207 52 This engine is a virtual-analog synthesis of classic waveforms., f 32;
#X text 196 173 Sets variable saw \, from triangle to saw with an increasingly wide notch (this is the 'CSAW' oscillator from the Braids module by Mutable Instruments.;
#X restore 230 106 pd 00-Pair of Classic Waveforms;
#N canvas 201 59 499 336 01-Waveshaping 0;
#X obj 81 147 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 HARMONICS:;
#X obj 81 178 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 TIMBRE:;
#X obj 81 213 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 MORPH:;
#X obj 84 265 else/note 102 13 Menlo empty 4 0 0 0 0 255 227 198 1 1 AUX OUT;
#X obj 90 46 else/note 314 13 Menlo empty 4 255 255 255 0 124 124 124 1 1 MODEL 1) Waveshaping Oscillator;
#X text 115 82 This engine is an asymmetric triangle waveform processed by a waveshaper and a wavefolder., f 47;
#X text 209 147 Controls waveshaper's waveforms.;
#X text 210 179 Controls wavefolder amount., f 36;
#X text 211 214 Sets triangle waveform asymmetry., f 36;
#X text 213 261 Variant output employing a different wavefolder curve., f 27;
#X restore 230 126 pd 01-Waveshaping Oscillator;
#N canvas 186 80 677 351 03-Granular 0;
#X obj 64 130 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 HARMONICS:;
#X obj 64 161 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 TIMBRE:;
#X obj 64 196 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 MORPH:;
#X obj 67 262 else/note 102 13 Menlo empty 4 0 0 0 0 255 227 198 1 1 AUX OUT;
#X obj 185 22 else/note 314 13 Menlo empty 4 255 255 255 0 124 124 124 1 1 MODEL 2) Granular Formant Oscillator;
#X text 149 61 This engine is a simulation of formants and filtered waveforms through the multiplication \, addition and synchronization of segments of sine waves., f 63;
#X text 192 130 Controls frequency ratio between formant '1' and '2'.;
#X text 193 162 Controls formant's frequency., f 36;
#X text 194 197 Controls formant's width and shape.;
#X text 196 248 Simulation of filtered waveforms by windowed sine waves – a recreation of Braids’ Z*** models. HARMONICS controls the filter type (Peaking \, LowPass \, BandPass \, HighPass) with smooth variation from one response to another., f 70;
#X restore 230 166 pd 03-Granular Formant Oscillator;
#N canvas 154 80 608 336 04-Harmonic 0;
#X obj 65 128 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 HARMONICS:;
#X obj 65 159 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 TIMBRE:;
#X obj 65 198 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 MORPH:;
#X obj 68 252 else/note 102 13 Menlo empty 4 0 0 0 0 255 227 198 1 1 AUX OUT;
#X obj 154 26 else/note 314 13 Menlo empty 4 255 255 255 0 124 124 124 1 1 MODEL 4) Harmonic Oscillator;
#X text 179 62 This engine is an additive mixture of harmonically-related sine waves., f 37;
#X text 194 128 Controls number of bumps in the spectrum., f 46;
#X text 194 160 Controls index of the most prominent harmonic.;
#X text 197 246 A variant including only the subset of harmonics present in the drawbars of a Hammond organ., f 49;
#X text 194 193 Controls bump shape from flat and wide to peaked and narrow., f 48;
#X restore 230 186 pd 04-Harmonic Oscillator;
#N canvas 341 163 632 495 05-Wavetable 0;
#X obj 65 128 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 HARMONICS:;
#X obj 65 168 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 TIMBRE:;
#X obj 65 207 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 MORPH:;
#X obj 68 261 else/note 102 13 Menlo empty 4 0 0 0 0 255 227 198 1 1 AUX OUT;
#X obj 126 26 else/note 314 13 Menlo empty 4 255 255 255 0 124 124 124 1 1 MODEL 5) Wavetable;
#X text 122 62 This engine is wavetable oscillator with 4 banks of 8x8 waveforms \, accessed by row and column \, with or without interpolation;
#X text 194 208 Sets column index., f 48;
#X text 194 123 Sets bank selection*. 4 interpolated banks followed by the same 4 banks \, in reverse order \, without interpolation.;
#X text 125 319 *Bank A: harmonically poor waveforms obtained by additive synthesis (sine harmonics \, drawbar organ waveforms) \; \; Bank B: harmonically rich waveforms obtained by formant synthesis or waveshaping \; \; Bank C: wavetables from the Shruthi-1 / Ambika \, sampled from classic wavetable or ROM playback synths \; \; Bank D: a joyous semi-random permutation of waveforms from the other 3 banks \;;
#X text 194 163 Sets row index. Within a row \, the waves are sorted by spectral brightness \, except for bank D which is a mess!, f 57;
#X text 197 261 A low-fi 5 bit output., f 49;
#X restore 230 206 pd 05-Wavetable Oscillator;
#N canvas 346 68 584 380 06-Chords 0;
#X obj 65 151 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 HARMONICS:;
#X obj 65 191 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 TIMBRE:;
#X obj 65 244 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 MORPH:;
#X obj 68 314 else/note 102 13 Menlo empty 4 0 0 0 0 255 227 198 1 1 AUX OUT;
#X obj 138 26 else/note 314 13 Menlo empty 4 255 255 255 0 124 124 124 1 1 MODEL 6) Chords;
#X text 194 193 Sets chord inversion and transposition., f 47;
#X text 197 314 Outputs root note of the chord., f 46;
#X text 90 70 This engine outputs Four-note chords \, played by Virtual Aanalog or wavetable oscillators. The virtual analogue oscillators emulate the stack of harmonically-related square or sawtooth waveforms generated by vintage string & organ machines., f 66;
#X text 194 229 Sets waveform. The first half goes through a selection of string-machine like raw waveforms (different combinations of the organ and string "drawbars") \, the second half of scans a small wavetable containing 16 waveforms., f 58;
#X text 194 147 Sets chord type: octave \, fifth \, sus4 \, minor \, minor 7th \, minor 9th \, minor 11th \, 69 \, Major 9th \, Major 7th \, Major.;
#X restore 230 226 pd 06-Chords;
#N canvas 313 144 654 365 07-Vowel 0;
#X obj 65 128 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 HARMONICS:;
#X obj 65 168 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 TIMBRE:;
#X obj 65 217 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 MORPH:;
#X obj 68 261 else/note 102 13 Menlo empty 4 0 0 0 0 255 227 198 1 1 AUX OUT;
#X obj 157 25 else/note 314 13 Menlo empty 4 255 255 255 0 124 124 124 1 1 MODEL 7) Vowel & Speech Synthesis;
#X text 182 61 This engine is a collection of speech synthesis algorithms., f 37;
#X text 194 124 Controls crossfading between formant filtering \, SAM \, and LPC vowels \, then goes through several banks of LPC words.;
#X text 194 170 Controls species selection \, from Daleks to chipmunks.;
#X text 194 206 Sets phoneme or word segment selection. Patch the trigger input to trigger the utterance of a word \, use the FM attenuverter* to control the intonation and the MORPH attenuverter* to control speed., f 65;
#X text 139 307 *The attenuverters are not yet implemented in this object.;
#X text 197 261 Unfiltered vocal cords’ signal., f 46;
#X restore 230 246 pd 07-Vowel & Speech Synthesis;
#N canvas 400 180 604 421 08-Granular 0;
#X obj 65 128 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 HARMONICS:;
#X obj 65 168 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 TIMBRE:;
#X obj 65 222 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 MORPH:;
#X obj 68 295 else/note 102 13 Menlo empty 4 0 0 0 0 255 227 198 1 1 AUX OUT;
#X obj 124 25 else/note 314 13 Menlo empty 4 255 255 255 0 124 124 124 1 1 MODEL 8) Granular Cloud;
#X text 135 61 This granular synthesis engine outputs a cloud of grains formed by a swarm of 8 enveloped sawtooth waves., f 50;
#X text 194 128 Controls amount of pitch randomization.;
#X text 194 168 Controls grain density., f 47;
#X text 196 295 A variant with sine wave oscillators., f 46;
#X text 194 210 Controls grain duration and overlap. grain duration and overlap. When fully up \, the grains merge into each other resulting in a stack of eight randomly frequency-modulated waveforms.;
#X text 135 349 Note: To get a nice "supersaw" waveform \, try a moderate amount of pitch randomization and grain density \, with full grain overlap.;
#X restore 450 106 pd 08-Granular Cloud;
#N canvas 187 103 548 350 09-Filtered 0;
#X obj 65 136 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 HARMONICS:;
#X obj 65 176 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 TIMBRE:;
#X obj 65 219 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 MORPH:;
#X obj 68 268 else/note 102 13 Menlo empty 4 0 0 0 0 255 227 198 1 1 AUX OUT;
#X obj 108 26 else/note 314 13 Menlo empty 4 255 255 255 0 124 124 124 1 1 MODEL 9) Filtered Noise;
#X text 194 131 Controls the filter response \, from LowPass to BandPass to HighPass., f 43;
#X text 194 176 Controls clock's frequency., f 47;
#X text 194 220 Controls filter's resonance., f 47;
#X text 196 262 A variant processed by two band-pass filters \, with their separation controlled by HARMONICS., f 46;
#X text 95 66 This engine is variable-clock white noise processed by a resonant filter. The cutoff frequency of the filter is controlled by the frequency input., f 54;
#X restore 450 126 pd 09-Filtered Noise;
#N canvas 303 120 582 360 16-Virtual 0;
#X obj 68 125 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 HARMONICS:;
#X obj 68 175 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 TIMBRE:;
#X obj 68 228 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 MORPH:;
#X obj 71 278 else/note 102 13 Menlo empty 4 0 0 0 0 255 227 198 1 1 AUX OUT;
#X obj 130 27 else/note 314 13 Menlo empty 4 255 255 255 0 124 124 124 1 1 MODEL 16) Virtual Analog VCF;
#X text 102 71 This engine consists of classic waveshapes with filter., f 59;
#X text 197 120 Sets resonance and filter character - gentle 24dB/octave below 0.5 \, harsh 12dB/octave above., f 48;
#X text 197 175 Control filter cutoff., f 47;
#X text 197 227 Sets waveform and sub oscillator level;
#X text 200 278 12dB/octave HighPass output., f 31;
#X restore 668 106 pd 16-Virtual Analog VCF;
#N canvas 374 100 586 358 17-Phase 0;
#X obj 104 129 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 HARMONICS:;
#X obj 104 179 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 TIMBRE:;
#X obj 104 232 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 MORPH:;
#X obj 107 282 else/note 102 13 Menlo empty 4 0 0 0 0 255 227 198 1 1 AUX OUT;
#X obj 112 27 else/note 314 13 Menlo empty 4 255 255 255 0 124 124 124 1 1 MODEL 17) Phase Distortion;
#X text 84 71 This engine consists of Phase distortion and modulation., f 59;
#X text 233 130 Sets distortion frequency., f 30;
#X text 233 179 Sets distortion amount., f 32;
#X text 233 231 Sets distortion asymmetry.;
#X text 236 282 carrier is free-running (phase modulation).;
#X restore 668 126 pd 17-Phase Distortion;
#N canvas 266 94 522 361 21-Wave 0;
#X obj 69 138 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 HARMONICS:;
#X obj 69 188 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 TIMBRE:;
#X obj 69 241 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 MORPH:;
#X obj 72 291 else/note 102 13 Menlo empty 4 0 0 0 0 255 227 198 1 1 AUX OUT;
#X obj 85 32 else/note 314 13 Menlo empty 4 255 255 255 0 124 124 124 1 1 MODEL 21) Wave Terrain;
#X text 198 139 Sets terrain., f 30;
#X text 198 188 Sets path radius., f 32;
#X text 198 240 Sets path offset.;
#X text 201 288 Terrain height interpreted as phase distortion (sin(y+z))., f 29;
#X text 57 76 This engine performs Wave terrain synthesis with continuous interpolation between eight 2D terrains. The output is the direct terrain height (z).;
#X restore 668 206 pd 21-Wave Terrain;
#N canvas 154 80 550 357 22-String 0;
#X obj 104 129 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 HARMONICS:;
#X obj 104 179 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 TIMBRE:;
#X obj 104 232 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 MORPH:;
#X obj 107 282 else/note 102 13 Menlo empty 4 0 0 0 0 255 227 198 1 1 AUX OUT;
#X obj 112 27 else/note 314 13 Menlo empty 4 255 255 255 0 124 124 124 1 1 MODEL 22) String Machine;
#X text 233 128 Sets chord., f 30;
#X text 233 179 Sets chorus/filter amount., f 32;
#X text 233 231 Sets waveform.;
#X text 116 69 This engine is a String machine emulation with stereo filter and chorus. Output is predominantly voices '1' & '3'.;
#X text 236 282 Predominantly voices '2' & '4';
#X restore 668 226 pd 22-String Machine;
#N canvas 154 80 518 503 23-Chiptune 0;
#X obj 92 129 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 HARMONICS:;
#X obj 92 179 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 TIMBRE:;
#X obj 92 232 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 MORPH:;
#X obj 95 282 else/note 102 13 Menlo empty 4 0 0 0 0 255 227 198 1 1 AUX OUT;
#X obj 100 27 else/note 314 13 Menlo empty 4 255 255 255 0 124 124 124 1 1 MODEL 23) Chiptune;
#X text 83 71 This engine consists of four variable square voices for chords or arpeggios.;
#X text 96 377 Signal trigger is also possible and defined in the next subpatch., f 49;
#X text 224 282 NES triangle voice.;
#X text 221 231 Sets Pulse Width and Sync;
#X text 221 179 Sets arpeggio type or chord inversion*.;
#X text 221 130 Sets chord., f 30;
#X text 95 332 *The arpeggiator works when in trigger mode and notes chnge ate every trigger. Check control Trigger mode via bangs in the [pd LPG] subpatch., f 49;
#X text 75 433 The TIMBRE attenuverter (not yet implemented in this object) would control envelope shape.;
#X restore 668 246 pd 23-Chiptune;
#X text 51 79 set model ->;
#X obj 142 406 else/plaits~ 500;
#X text 344 417 The [plaits~] object is a simplified version adapted to Pd \, so you don't have signal input for model \, FM \, harmonics \, timbre and morph. You also don't have attenuators by extension. You can perform FM on your own here in Pd and use control messages for the other parameters only \, which I think it's reasonable in the Pd world for the moment. More parameters are yet to come though \, hence \, consider this object still experimental., f 78;
#N canvas 212 98 618 325 02-Two-Operators 0;
#X obj 64 124 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 HARMONICS:;
#X obj 64 155 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 TIMBRE:;
#X obj 64 190 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 MORPH:;
#X obj 67 242 else/note 102 13 Menlo empty 4 0 0 0 0 255 227 198 1 1 AUX OUT;
#X obj 153 22 else/note 314 13 Menlo empty 4 255 255 255 0 124 124 124 1 1 MODEL 2) Two Operators FM;
#X text 178 58 This engine consists of two sine wave oscillators modulating each other’s phase., f 43;
#X text 193 156 Controls modulation index., f 36;
#X text 192 124 Controls frequency ratio between the oscillators., f 50;
#X text 194 186 Sets feedback amount. Values above 0.5 sets operator 2 modulating its own phase. Below 0.5 sets operator 1’s phase.;
#X text 196 242 A sub-oscillator., f 27;
#X restore 230 146 pd 02-Two-Operators FM;
#N canvas 359 81 696 493 18-Six-Operators 0;
#X text 111 345 The two voices are alternatively triggered whenever a trigger is received 2nd inlet. When nothing is connected to the 2nd inlet \, a single voice plays as a drone \, and the MORPH knob allows time-travel along the envelopes and modulations., f 85;
#X text 111 400 The input level in the 3rd inlet is repurposed as a velocity control - controlling loudness or timbre depending on how each preset is programmed., f 85;
#X obj 104 129 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 HARMONICS:;
#X obj 104 179 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 TIMBRE:;
#X obj 104 232 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 MORPH:;
#X obj 107 282 else/note 102 13 Menlo empty 4 0 0 0 0 255 227 198 1 1 AUX OUT;
#X obj 163 25 else/note 314 13 Menlo empty 4 255 255 255 0 124 124 124 1 1 MODEL 18) Six-Operators FM #1;
#X text 233 130 Sets preset., f 30;
#X text 233 179 Sets modulator(s) level., f 32;
#X text 233 231 Sets envelope and modulation stretching/time-travel.;
#X text 61 65 This engine consists of 2-voice \, 6-operator FM synth with 32 presets for basses/synths \, keyboards/plucked \, strings/percussions and organs/pads/strings/brass., f 87;
#X text 236 282 Right output of stereo sound;
#X restore 668 146 pd 18-Six-Operators FM #1;
#N canvas 165 81 684 466 19-Six-Operators 0;
#X text 111 345 The two voices are alternatively triggered whenever a trigger is received 2nd inlet. When nothing is connected to the 2nd inlet \, a single voice plays as a drone \, and the MORPH knob allows time-travel along the envelopes and modulations., f 85;
#X text 111 400 The input level in the 3rd inlet is repurposed as a velocity control - controlling loudness or timbre depending on how each preset is programmed., f 85;
#X obj 104 129 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 HARMONICS:;
#X obj 104 179 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 TIMBRE:;
#X obj 104 232 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 MORPH:;
#X obj 107 282 else/note 102 13 Menlo empty 4 0 0 0 0 255 227 198 1 1 AUX OUT;
#X obj 163 24 else/note 314 13 Menlo empty 4 255 255 255 0 124 124 124 1 1 MODEL 19) Six-Operators FM #2;
#X text 233 130 Sets preset., f 30;
#X text 233 179 Sets modulator(s) level., f 32;
#X text 233 231 Sets envelope and modulation stretching/time-travel.;
#X text 61 65 This engine consists of 2-voice \, 6-operator FM synth with 32 presets for basses/synths \, keyboards/plucked \, strings/percussions and organs/pads/strings/brass., f 87;
#X text 236 282 Right output of stereo sound;
#X restore 668 166 pd 19-Six-Operators FM #2;
#N canvas 165 81 698 470 20-Six-Operators 0;
#X text 111 345 The two voices are alternatively triggered whenever a trigger is received 2nd inlet. When nothing is connected to the 2nd inlet \, a single voice plays as a drone \, and the MORPH knob allows time-travel along the envelopes and modulations., f 85;
#X text 111 400 The input level in the 3rd inlet is repurposed as a velocity control - controlling loudness or timbre depending on how each preset is programmed., f 85;
#X obj 104 129 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 HARMONICS:;
#X obj 104 179 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 TIMBRE:;
#X obj 104 232 else/note 102 13 Menlo empty 4 0 0 0 0 223 223 223 1 1 MORPH:;
#X obj 107 282 else/note 102 13 Menlo empty 4 0 0 0 0 255 227 198 1 1 AUX OUT;
#X obj 163 25 else/note 314 13 Menlo empty 4 255 255 255 0 124 124 124 1 1 MODEL 20) Six-Operators FM #3;
#X text 233 130 Sets preset., f 30;
#X text 233 179 Sets modulator(s) level., f 32;
#X text 233 231 Sets envelope and modulation stretching/time-travel.;
#X text 61 65 This engine consists of 2-voice \, 6-operator FM synth with 32 presets for basses/synths \, keyboards/plucked \, strings/percussions and organs/pads/strings/brass., f 87;
#X text 236 282 Right output of stereo sound;
#X restore 668 186 pd 20-Six-Operators FM #3;
#X connect 1 0 19 0;
#X connect 3 0 1 0;
#X connect 4 0 43 0;
#X connect 6 0 43 0;
#X connect 8 0 2 0;
#X connect 9 0 43 0;
#X connect 10 0 43 0;
#X connect 14 0 18 0;
#X connect 18 0 43 0;
#X connect 19 0 43 0;
#X connect 43 0 0 0;
#X connect 43 1 0 1;
#X connect 43 2 8 0;
#X connect 43 2 11 0;
#X restore 468 170 pd +details;
#X text 154 510 anything;
#X text 212 511 - output information on setting model or 'dump';
#X text 172 387 print;
#X text 212 387 - output information on terminal window;
#X text 212 401 - output information on rightmost outlet;
#X text 178 401 dump;
#X obj 90 418 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 166 419 signal;
#X obj 90 439 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 212 419 - signal trigger input;
#X text 166 439 signal;
#N canvas 558 71 467 361 signal-trigger 0;
#X obj 90 273 else/out~;
#X obj 86 28 vsl 15 128 0 1 0 0 vetgetge getgtgte empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 109 28 vsl 15 128 0 1 0 0 vetgetge getgtgte empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 229 193 else/trig2bang~;
#X obj 229 161 else/randpulse2~ 10;
#X obj 229 220 bng 19 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X msg 42 183 cutoff \$1;
#X msg 109 183 decay \$1;
#X text 153 60 When you have a signal connected to the 2nd inlet \, you force the object into 'trigger mode' but it now only expects a signal trigger instead of a bang. A signal trigger in this case is a pulse signal., f 39;
#X obj 109 236 else/plaits~ 250;
#X connect 1 0 6 0;
#X connect 2 0 7 0;
#X connect 3 0 5 0;
#X connect 4 0 3 0;
#X connect 4 0 9 1;
#X connect 6 0 9 0;
#X connect 7 0 9 0;
#X connect 9 0 0 0;
#X connect 9 1 0 1;
#X restore 432 191 pd signal-trigger;
#N canvas 317 72 840 544 level(VCA)-Excitation 0;
#X floatatom 204 122 5 0 0 0 - - - 12;
#X obj 204 157 else/plaits~ 500;
#X obj 185 190 out~;
#X obj 106 439 out~;
#X msg 117 372 model 12;
#X msg 100 347 model 11;
#X text 212 455 disconnect the signal to the 2nd inlet to hear the difference., f 32;
#X text 75 41 The [plaits~] object has a built in VCA level control input. To activate it you just need to connect a signal to the 3rd inlet. Only positive values work and "1" means no gain alteration., f 63;
#X obj 100 399 else/plaits~ -model 11 500 0.7 1 0.5;
#X obj 313 364 else/dust~ 100;
#X obj 297 106 osc~ 5;
#X obj 297 132 else/rescale~;
#X text 74 266 Hence \, this allows amplitude modulation for all models \, execpt for models 11 \, 12 \, 18 \, 19 and 20! In models 11 (Inharmonic string modeling) and 12 (Modal resonator bank) the connected signal is used as an excitation signal instead.;
#X obj 547 340 out~;
#X msg 557 263 model 20;
#X obj 744 206 else/knob 50 0 1 0 0.5 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0.5;
#X msg 525 211 model 18;
#X msg 542 236 model 19;
#X obj 525 294 else/plaits~ -model 18 100 0.25 1 0.5;
#X obj 744 266 f2s~ 5 0.5;
#X text 526 115 In modes 18 \, 19 and 20 (6 operator FM) \, the level input controls loudness or timbre depending on how each preset is programmed. Without a signal connected \, it's like this parameter is set to '0.5'., f 41;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 2 1;
#X connect 4 0 8 0;
#X connect 5 0 8 0;
#X connect 8 0 3 0;
#X connect 8 1 3 1;
#X connect 9 0 8 2;
#X connect 10 0 11 0;
#X connect 11 0 1 2;
#X connect 14 0 18 0;
#X connect 15 0 19 0;
#X connect 16 0 18 0;
#X connect 17 0 18 0;
#X connect 18 0 13 0;
#X connect 18 1 13 1;
#X connect 19 0 18 2;
#X restore 390 213 pd level(VCA)-Excitation;
#X text 106 275 <hz>/<midi>/<cv>;
#X text 212 275 - set frequency mode to hz \, midi or cv;
#X text 139 538 -cv/-midi: set to pitch input in CV or MIDI \, (default hz);
#X text 212 303 - set model number (0-23) and output name;
#X text 60 84 [plaits~] is a synthesizer with 24 different synth engines. It's based on the "plaits" module from Mutable Instruments and a port of it to Pd., f 65;
#X text 167 608 2) float - harmonics (default 0.5), f 50;
#X text 167 623 3) float - timbre (default 0.5), f 50;
#X text 167 638 4) float - morph (default 0.5), f 50;
#X text 212 439 - built-in VCA level (or else depending on the model);
#X text 22 151 This object is still experimental., f 21;
#X connect 1 0 49 0;
#X connect 49 0 0 0;
#X connect 49 1 0 1;
