#N canvas 454 23 563 647 10;
#X obj 4 266 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 459 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 512 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X obj 106 467 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 107 273 cnv 17 3 137 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 4 622 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 23 40 cnv 4 4 4 empty empty 2\ operators\ FM 0 28 2 18 #e0e0e0 #000000 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 3 3 cnv 15 301 42 empty empty op2~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 3 3 graph;
#X text 61 89 [op2~] is a 2 operators FM (actually phase modulation) synthesizer. Each oscillator can modulate itself and each other., f 69;
#X obj 227 202 else/out~;
#X obj 107 415 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 196 415 signal;
#X text 239 415 - level for operator 1;
#X obj 107 437 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 196 437 signal;
#X text 239 437 - level for operator 2;
#X text 196 468 signal;
#X obj 107 489 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 196 489 signal;
#X text 239 468 - left output;
#X text 239 489 - right output;
#X text 157 599 1) float - frequency in hz (default 0);
#X obj 4 590 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X text 160 272 float/signal;
#X text 240 272 - frequency in hertz, f 47;
#X text 160 287 ratio <list>;
#X text 240 287 - set frequency ratio for operators, f 47;
#X text 240 302 - set detuning frequency for operators, f 47;
#X text 154 302 detune <list>;
#X text 172 317 pan <list>;
#X text 240 317 - set panning for operators, f 47;
#X text 136 333 ratio'n' <float>;
#X text 130 349 detune'n' <float>;
#X text 148 364 pan'n' <float>;
#X text 136 394 'i'to'j' <float>;
#X text 240 364 - set op panning ('pan1' sets op1 \, etc), f 47;
#X text 240 349 - set op detuning ('detune1' sets op1 \, etc), f 47;
#X text 240 333 - set op ratio ('ratio1' sets op1 \, etc), f 47;
#X text 240 394 - set index ('1to2' sets op1 to op2 index \, etc);
#X text 172 379 idx <list>;
#X text 240 379 - set modulation matrix values, f 47;
#X text 115 520 -ratio <list>: set frequency ratio (default all = 1);
#X text 115 537 -detune <list>: set frequency detuning (default all = 0);
#X text 115 553 -pan <list>: set paning (default all = 0);
#X text 115 568 -idx <list>: set modulation matrix (default all = 0);
#N canvas 330 138 899 534 basic 0;
#X msg 155 199 detune1 \$1;
#X msg 168 249 detune2 \$1;
#X floatatom 156 177 5 0 0 0 - - - 0;
#X floatatom 168 228 5 0 0 0 - - - 0;
#X obj 177 451 else/out~;
#X text 35 22 The operators are two sine wavetables oscillators. The input frequency is in hertz but each operator has its own ratio factor according to the input frequency. The default ratio value is "1" \, so it's the same as the input frequency. You can also define a 'detune' parameter in hz for each operator., f 71;
#X text 35 84 You can set the ratio of each operator with messages \, as in 'ratio1' (for operator 1) or 'ratio2' (for operator 2). The 'ratio' or flag message accepts a list for all operators. Similarly the 'detune1' message sets the detuning for operator 1 and so on \, and the 'detune' message or flag sets detuning in hz for both., f 71;
#X obj 154 398 else/op2~ -ratio 1 1.5001 -detune 1 0.5, f 26;
#X obj 93 199 sig~ 440;
#X floatatom 256 216 5 0 0 0 - - - 0;
#X floatatom 267 262 5 0 0 0 - - - 0;
#X msg 255 238 ratio1 \$1;
#X msg 267 283 ratio2 \$1;
#X floatatom 93 168 5 0 0 0 - - - 0;
#X floatatom 536 159 5 0 0 0 - - - 0;
#X obj 591 446 else/out~;
#X obj 601 409 else/op2~ 440;
#X text 499 36 Similarly \, you also have 'pan' and 'vol' messages and flags. This sets panning (from -1 to 1) for each oscillator or linear volume gain for each oscillator.;
#X obj 536 98 else/knob 50 -1 1 0 0 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0;
#X floatatom 674 230 5 0 0 0 - - - 0;
#X obj 674 169 else/knob 50 0 1 0 0 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0;
#X msg 674 252 vol1 \$1;
#X msg 708 354 pan 0 0 \, vol 1 1;
#X text 721 331 default values;
#X floatatom 601 189 5 0 0 0 - - - 0;
#X obj 601 128 else/knob 50 -1 1 0 0 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0;
#X msg 536 181 pan1 \$1;
#X msg 601 211 pan2 \$1;
#X floatatom 747 255 5 0 0 0 - - - 0;
#X obj 747 194 else/knob 50 0 1 0 0 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0;
#X msg 747 277 vol2 \$1;
#X text 679 83 Note that panning and volume levels generate internal ramps of 10 ms at signal rate to reach the values., f 30;
#X msg 265 332 ratio 1.01 1.5 \, detune 10 5, f 15;
#X connect 0 0 7 0;
#X connect 1 0 7 0;
#X connect 2 0 0 0;
#X connect 3 0 1 0;
#X connect 7 0 4 0;
#X connect 7 1 4 1;
#X connect 8 0 7 0;
#X connect 9 0 11 0;
#X connect 10 0 12 0;
#X connect 11 0 7 0;
#X connect 12 0 7 0;
#X connect 13 0 8 0;
#X connect 14 0 26 0;
#X connect 16 0 15 0;
#X connect 16 1 15 1;
#X connect 18 0 14 0;
#X connect 19 0 21 0;
#X connect 20 0 19 0;
#X connect 21 0 16 0;
#X connect 22 0 16 0;
#X connect 24 0 27 0;
#X connect 25 0 24 0;
#X connect 26 0 16 0;
#X connect 27 0 16 0;
#X connect 28 0 30 0;
#X connect 29 0 28 0;
#X connect 30 0 16 0;
#X connect 32 0 7 0;
#X restore 486 208 pd basic;
#X obj 235 171 else/op2~ 440;
#X obj 235 143 else/initmess 1to2 0.5;
#X text 98 131 set modulation index from op1 to op2 =====>, f 22;
#X text 325 169 frequency;
#N canvas 662 105 446 518 modulation 0;
#X obj 137 326 else/out~;
#X obj 114 287 else/op2~ 440, f 26;
#X floatatom 54 176 7 0 0 0 - - - 0;
#X msg 54 200 1to1 \$1;
#X obj 54 116 knob 50 -1 1 0 0 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0;
#X obj 246 116 knob 50 -1 1 0 0 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0;
#X msg 246 179 2to2 \$1;
#X obj 114 116 knob 50 -1 1 0 0 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0;
#X msg 114 179 1to2 \$1;
#X obj 185 116 knob 50 -1 1 0 0 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0;
#X msg 185 179 2to1 \$1;
#X text 60 453 Note that for feedback modulation \, there's a mean average filter of 2 samples being applied., f 47;
#X msg 218 242 idx 0.1 0.2 0.3 0.4;
#X text 34 20 You can set the modulation index for all possible interactions \, which include the operator modulating itself or each other. Use messages 'i'to'j' to set oprator 'i' modulating the input of 'j'. Note that for feedback modulation \, there's a mean average filter of 2 samples being applied., f 51;
#X text 55 395 The 'idx' message or flag sets the modulation index for all values in the modulation matrix. The list is "1to1" \, "2to1" \, "1to2" and "2to2"., f 48;
#X connect 1 0 0 0;
#X connect 1 1 0 1;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X connect 4 0 2 0;
#X connect 5 0 6 0;
#X connect 6 0 1 0;
#X connect 7 0 8 0;
#X connect 8 0 1 0;
#X connect 9 0 10 0;
#X connect 10 0 1 0;
#X connect 12 0 1 0;
#X restore 456 230 pd modulation;
#X connect 55 0 18 0;
#X connect 55 1 18 1;
#X connect 56 0 55 0;
